How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It easily identified which lines of code were add/deleted between each version.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows for quick and efficient identifcation of bugs/issues with code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros you always know when tou made the commit with a note to remind you. Con you could forget to make a commit and lose work or have to revert very far back to address a bug.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because most applications require multiple files to be edited at multiple times to run as intended.

How can you use the commands git log and git diff to view the history of files?

    git log shows all commits of a file and git diff helps compare two different commits to quickly identify which lines of codes were editied/added/deleted.

How might using version control make you more confident to make changes that
could break something?

    I have become more confident just thinking about utilizing git because as long as I document and keep up with my commits I know that I could easily revert back to a previous commit to identify bugs or to "fix" a broken application.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git for all my future coding and development of websites, web apps, and applications.